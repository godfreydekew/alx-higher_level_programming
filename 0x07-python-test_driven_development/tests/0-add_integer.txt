#0-add_iinteger.txt

===========================
Using 0-add_integer.py
===========================

Using the integer addition function ``add_integer(a, b=98)``.

Usage
=====

This function returns the addition of argmuments.

First import the function from the 0-add_integer file:


	>>> add_integer = __import__('0-add_integer').add_integer

Then use it:

	>>> add_integer(3, 3)
	6

With negative numbers:


	>>> add_integer(-11, -9)
	-20

With floating-point values:


	>>> add_integer(3.0, 3.0)
	6

The floats are casted to int before addition is performed.


	>>> add_integer(-15.5, -10.5)
	-25

Floating point values and non-floating point values can be combined.


	>>> add_integer(7, 2.6)
	9

The second argument `b` has a default value of 98.

	>>> add_integer(2)
	100
	

Exception
=========

The ``add_integer()`` excepts integers or floats as both its arguments.
If either `a` or `b` is not an integer or float, a TypeError is raised.




	>>> add_integer('Godfrey', -10)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer


	>>> add_integer(5, 'Alx')
        Traceback (most recent call last):
                ...
        TypeError: b must be an integer

	
	>>> add_integer(None)
        Traceback (most recent call last):
                ...
        TypeError: a must be an integer


	>>> add_integer('Godfrey', 'Africa')
        Traceback (most recent call last):
                ...
        TypeError: a must be an integer

	
